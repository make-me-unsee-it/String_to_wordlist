УСЛОВИЕ:
Программа принимает на вход английский текст, произвольной длины, обрабатывает его и выводит все слова,
которые встречаются в тексте (без дубликатов) группируя их по первой букве в алфавитном порядке. Знаки
препинания игнорируются. Регистр заглавных букв не учитывается. Подсчитать ещё и количество вхождений.


    Задача реализована через класс LineToWordList с перегруженным основным методом (public):
    - первый (по умолчанию) без принимаемых параметров для получения исходного текста запускает
    сканнер, который реализован в статическом методе scanNoCyr() в классе Scn.
    Сканнер обрабатывает исключение, когда введенный текст содержит кириллицу и при ее обнаружении
    выводит сообщение об ошибке);
    - второй принимает текст в качестве аргумента типа String при создании экземпляра класса.


    Обработка задачи производится последовательным вызовом protected методов внутри каждого из основных методов.
    Алгоритм обработки разбит на 4 этапа (4 protected метода) для возможности тестирования.

    После ввода исходного текста в обоих основных методах первым к ним применяется метод toLowerCase().

    1-й protected метод
    принимает строку и с помощью алгоритма поиска по шаблону [a-z ] из исходной строки создает объект типа
    StringBuilder, состоящий только из слов, разделенных пробелами, затем по шаблону [' '] разделяет
    на отдельные слова. Метод возвращает массив типа String.

    2-й protected метод
    принимает массив String, значения элементов которого переносятся в коллекцию ArrayList<String> uniqueWords.
    Значения элементов коллекции сортируются с помощью метода Collections.sort().
    Затем из коллеции удаляются пустые элементы, которые могли быть переданы из предыдущего метода.
    Метод возвращает коллекцию ArrayList<String>.

    3-й protected метод
    принимает ArrayList<String>. В методе создается  Map<String, Integer> где уникальные слова (String) будут в
    роли ключа, а значение (Integer) - количество повторений.
    С помощью цикла for...each проходим отсортированную коллекцию ArrayList<String> и в инструкции if-else
    считаем количесвто повторяющихся слов.
    Метод возвращает Map<String, Integer>.

    4-й protected метод
    принимает Map<String, Integer>. В методе создается объект StringBuilder, в который по заданным условиям
    сохраняется результат.
    Метод возвращает итоговый результат в виде объекта String, который создается с помощью toString() из
    объекта StringBuilder.

    Все тесты сделаны отдельными класс-файлами во-избежание что-нибудь в них сломать.
    Для сканнера и связанного с ним перегруженного метода тесты не писал (проверил через main - работает).